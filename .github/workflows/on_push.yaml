# name: On Push

# on: [push]

# concurrency:
#   group: ${{ github.ref }}
#   cancel-in-progress: true

# jobs:
# quality-check-pylint:
#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v3

#     - uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

#     - name: Lint with pylint
#       run: |
#         python -m pip install --upgrade pip setuptools pylint
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         pylint --recursive=y .

# quality-check-flake8:
#   if: success()
#   needs: quality-check-pylint

#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v3

#     - uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

#     - name: Lint with flake8
#       run: |
#         python -m pip install --upgrade pip setuptools flake8
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         flake8 .

# test-check-unittest:
#   if: success()
#   needs: quality-check-flake8

#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v3

#     - uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

#     - name: Unit test
#       run: |
#         python -m pip install --upgrade pip setuptools pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         pytest tests/unit_tests

# test-check-apitest:
#   if: success()
#   needs: test-check-unittest

#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v3

#     - uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"

#     - name: API test
#       run: |
#         python -m pip install --upgrade pip setuptools pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         pytest tests/api_tests
